{"version":3,"sources":["../src/helpers.js"],"names":["omitDeep","isArray","isObject","forOwn","omit","map","defaultTrackingLib","track","console","log","identify","generateConfig","blacklistActions","blacklistKeys","identifyAction","identifySchemaID","trackingLib","onBlackList","includes","removeType","getID","get"],"mappings":"0fAEO,GAAMA,2BAAW,aAA0B,CAChD,GAAM,GAAgB,WAAO,CAC3B,WACE,IAAK,kBAAEC,OAAF,GAAL,CACE,MAAOD,cAAP,CACF,IAAK,CAAC,iBAAEC,OAAF,GAAD,EAAmB,CAAC,iBAAEC,QAAF,GAAzB,CACE,SACF,IAAoB,WAAf,UAAL,CACE,SACF,QACE,GAAM,KAAN,CAIA,MAHA,kBAAEC,MAAF,GAAc,aAAgB,CAC5B,KAAcH,aACf,CAFD,CAGA,CAAO,iBAAEI,IAAF,KAAP,CAZJ,CAcD,CAfD,CAgBA,WACE,IAAK,kBAAEH,OAAF,GAAL,CACE,MAAO,GAAMI,GAAN,GAAP,CACF,IAAsB,WAAjB,UAAL,CACE,SACF,QACE,MAAO,KAAP,CANJ,CAQD,CAzBM,CA4BMC,8CAAqB,iBAAO,CACvCC,MAAO,iBAAoB,CACzBC,QAAQC,GAAR,GACD,CAHsC,CAIvCC,SAAU,oBAAiB,CACzBF,QAAQC,GAAR,GACD,CANsC,CAAP,CA5B3B,CAqCME,sCAAiB,6BAC5BC,mBAD4B,CAE5BC,gBAF4B,CAG5BC,eAAgB,IAHY,CAI5BC,iBAAkB,IAJU,CAK5BC,YAAaV,kBALe,KArCvB,CA8CMW,gCAAc,oBACzB,CAAC,iBAAEC,QAAF,KADwB,CA9CpB,CAiDMC,8BAAa,kBAAU,kBAAEf,IAAF,GAAe,MAAf,CAAV,CAjDnB,CAkDMgB,oBAAQ,wBAChB,iBAAEC,GAAF,OAAoC,QADpB,EAlDd","file":"helpers.js","sourcesContent":["import _ from 'lodash'\n\nexport const omitDeep = (input, blacklistKeys) => {\n  const omitDeepProps = obj => {\n    switch (true) {\n      case _.isArray(obj):\n        return omitDeep(obj, blacklistKeys)\n      case !_.isArray(obj) && !_.isObject(obj):\n        return obj\n      case typeof obj === 'undefined':\n        return {}\n      default:\n        const result = {}\n        _.forOwn(obj, (value, key) => {\n          result[key] = omitDeep(value, blacklistKeys)\n        })\n        return _.omit(result, blacklistKeys)\n    }\n  }\n  switch (true) {\n    case _.isArray(input):\n      return input.map(omitDeepProps)\n    case typeof input === 'undefined':\n      return {}\n    default:\n      return omitDeepProps(input)\n  }\n}\n\n// Default tracker tool, ideal use with\nexport const defaultTrackingLib = () => ({\n  track: (event, payload) => {\n    console.log(event)\n  },\n  identify: (id, payload) => {\n    console.log(id)\n  }\n})\n\nexport const generateConfig = config => ({\n  blacklistActions: [],\n  blacklistKeys: [],\n  identifyAction: null,\n  identifySchemaID: null,\n  trackingLib: defaultTrackingLib,\n  ...config\n})\n\nexport const onBlackList = (blacklistActions, type) =>\n  !_.includes(blacklistActions, type)\n\nexport const removeType = action => _.omit(action, 'type')\nexport const getID = (payload, identifySchemaID) =>\n  `${_.get(payload, identifySchemaID) || 'NOT_ID'}`\n"]}